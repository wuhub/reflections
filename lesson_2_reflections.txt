How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Listed out the all the changeds. Easy to find chnages.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By using VC.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: full control with my developement. Cons: could not prevent accidental events.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Yes

How might using version control make you more confident to make changes that
could break something?

    Practice

Now that you have your workspace set up, what do you want to try using Git for?

    Application development

What happens when you initialize a repository? Why do you need to do it?

    It created .git directory.  This is initial step to create git VC.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

    It is separated work space which is visible for the repo commit. So, you
    can prepare the commit actions.

How can you use the staging area to make sure you have one commit per logical change?

    Put all the logical changed file in the staging area then commit at once.

What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

    Develope a separate feature which will not impact the master branch.

How do the diagrams help you visualize the branch structure?

    Tell where was the new branch created based on Commit (ID)

What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?

    All the comments in both branches are merged togather. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    Automatic merging save the commits in order.  Manual merges allow to resolve the 
    conflicts. 